/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.rcorrent.view;

import br.com.rcorrent.dao.CidadeDao;
import br.com.rcorrent.dao.EnderecoDao;
import br.com.rcorrent.enuns.Estados;
import br.com.rcorrent.model.Cidade;
import br.com.rcorrent.model.Endereco;
import br.com.rcorrent.tools.BuscaCEP;
import br.com.rcorrent.tools.JTableUtils;
import br.com.rcorrent.view.busca.BuscarCidade;
import java.awt.Dialog;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author rcorrent
 */
public class EnderecoView extends javax.swing.JDialog {
    
    private Integer estado;
    
    private final EnderecoDao enderecoDao = new EnderecoDao();
    private final CidadeDao cidadeDao = new CidadeDao();
    private final BuscaCEP buscaCep = new BuscaCEP();
    
    private Long codigoParaPassagem;
    
    private Endereco endereco;
    private Cidade cidade;

    public EnderecoView(Dialog owner, boolean modal) {
        super(owner, modal);
        initComponents();
        
        //deixar o campo valor inicial desabilitado
        jtfValor.setEnabled(false);
        
        this.estado = Estados.getPadrao().getEstado();
        
        //desabilitar botões
        estadoInicialDosBotoes();
        
        //desabilitar os campos
        habilitarCampos(false);
        jtfValor.setEnabled(false);
        JTableUtils.formatarJtable(jtListaEndereco,new int[]{40,40,100,280,80});
    }
    
    /**
     * Creates new form CidadeView
     */
    public EnderecoView() {
        initComponents();
        
        //deixar o campo valor inicial desabilitado
        jtfValor.setEnabled(false);
        
        this.estado = Estados.getPadrao().getEstado();
        
        //desabilitar botões
        estadoInicialDosBotoes();
        
        //desabilitar os campos
        habilitarCampos(false);
        jtfValor.setEnabled(false);
        //formatar a tabela de endereços
        JTableUtils.formatarJtable(jtListaEndereco,new int[]{40,40,100,280,80});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpEndereco = new javax.swing.JPanel();
        jlCodigo = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jftfCep = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfLogradouro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfNumero = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfBairro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfComplemento = new javax.swing.JTextField();
        jbBuscarCidade = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtfCodigoCidade = new javax.swing.JTextField();
        jtfNomeCidade = new javax.swing.JTextField();
        jtfNomeUf = new javax.swing.JTextField();
        jpBotoes = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbGravar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jpConsulta = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jcbFiltrar = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jtfValor = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtListaEndereco = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jlCodigo.setText("Código");

        jtfCodigo.setEnabled(false);

        jLabel1.setText("Cep");

        try {
            jftfCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfCep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftfCepFocusLost(evt);
            }
        });

        jLabel2.setText("Logradouro");

        jLabel3.setText("Número");

        jLabel4.setText("Bairro");

        jLabel5.setText("Complemento");

        jbBuscarCidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/rcorrent/icons/1491673267_search.png"))); // NOI18N
        jbBuscarCidade.setMnemonic('C');
        jbBuscarCidade.setText("Buscar Cidade");
        jbBuscarCidade.setIconTextGap(10);
        jbBuscarCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarCidadeActionPerformed(evt);
            }
        });

        jLabel6.setText("Código");

        jLabel7.setText("Cidade");

        jLabel8.setText("Estado");

        jtfCodigoCidade.setEnabled(false);

        jtfNomeCidade.setEnabled(false);

        jtfNomeUf.setEnabled(false);

        jpBotoes.setBackground(new java.awt.Color(222, 222, 222));

        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/rcorrent/icons/1491671388_new10.png"))); // NOI18N
        jbNovo.setMnemonic('N');
        jbNovo.setText("Novo");
        jbNovo.setIconTextGap(10);
        jbNovo.setPreferredSize(new java.awt.Dimension(110, 27));
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });
        jpBotoes.add(jbNovo);

        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/rcorrent/icons/1491671388_new10.png"))); // NOI18N
        jbAlterar.setMnemonic('A');
        jbAlterar.setText("Alterar");
        jbAlterar.setIconTextGap(10);
        jbAlterar.setPreferredSize(new java.awt.Dimension(110, 27));
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });
        jpBotoes.add(jbAlterar);

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/rcorrent/icons/1491672387_garbage.png"))); // NOI18N
        jbExcluir.setMnemonic('E');
        jbExcluir.setText("Excluir");
        jbExcluir.setIconTextGap(10);
        jbExcluir.setPreferredSize(new java.awt.Dimension(110, 27));
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });
        jpBotoes.add(jbExcluir);

        jbGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/rcorrent/icons/1491672401_vintage11.png"))); // NOI18N
        jbGravar.setMnemonic('G');
        jbGravar.setText("Gravar");
        jbGravar.setIconTextGap(10);
        jbGravar.setPreferredSize(new java.awt.Dimension(110, 27));
        jbGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGravarActionPerformed(evt);
            }
        });
        jpBotoes.add(jbGravar);

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/rcorrent/icons/1491672468_cancel-2.png"))); // NOI18N
        jbCancelar.setMnemonic('C');
        jbCancelar.setText("Cancelar");
        jbCancelar.setIconTextGap(10);
        jbCancelar.setPreferredSize(new java.awt.Dimension(110, 27));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });
        jpBotoes.add(jbCancelar);

        javax.swing.GroupLayout jpEnderecoLayout = new javax.swing.GroupLayout(jpEndereco);
        jpEndereco.setLayout(jpEnderecoLayout);
        jpEnderecoLayout.setHorizontalGroup(
            jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEnderecoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpEnderecoLayout.createSequentialGroup()
                        .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfLogradouro)
                            .addGroup(jpEnderecoLayout.createSequentialGroup()
                                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jtfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpEnderecoLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jtfComplemento))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jftfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jpEnderecoLayout.createSequentialGroup()
                                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jlCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jtfCodigo))
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jpEnderecoLayout.createSequentialGroup()
                        .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpEnderecoLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addComponent(jbBuscarCidade, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(174, 174, 174))
                    .addGroup(jpEnderecoLayout.createSequentialGroup()
                        .addComponent(jtfCodigoCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNomeCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtfNomeUf, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addComponent(jpBotoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
        );
        jpEnderecoLayout.setVerticalGroup(
            jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEnderecoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jlCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpEnderecoLayout.createSequentialGroup()
                        .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jpEnderecoLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jftfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jpEnderecoLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jbBuscarCidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpEnderecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigoCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNomeCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNomeUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jTabbedPane1.addTab("Endereço", jpEndereco);

        jLabel9.setText("Filtrar");

        jcbFiltrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Geral", "Código", "Cidade", "Logradouro", "CEP" }));
        jcbFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFiltrarActionPerformed(evt);
            }
        });

        jLabel10.setText("Valor");

        jbPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/rcorrent/icons/1491673267_search.png"))); // NOI18N
        jbPesquisar.setMnemonic('P');
        jbPesquisar.setText("Pesquisar");
        jbPesquisar.setIconTextGap(10);
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jtListaEndereco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "UF", "Cidade", "Logradouro", "CEP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtListaEndereco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtListaEnderecoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtListaEndereco);

        javax.swing.GroupLayout jpConsultaLayout = new javax.swing.GroupLayout(jpConsulta);
        jpConsulta.setLayout(jpConsultaLayout);
        jpConsultaLayout.setHorizontalGroup(
            jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                    .addGroup(jpConsultaLayout.createSequentialGroup()
                        .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpConsultaLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jpConsultaLayout.createSequentialGroup()
                                .addComponent(jtfValor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbPesquisar)))))
                .addContainerGap())
        );
        jpConsultaLayout.setVerticalGroup(
            jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consulta", jpConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(681, 546));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        estadoDosBotoesAoInserirNovo();
        habilitarCampos(true);
        limparCampos();
        this.estado = Estados.getInsercao().getEstado();
        //setar o campo de CEP
        jftfCep.grabFocus();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        estadoDosBotoesAoInserirNovo();
        habilitarCampos(true);
        this.estado = Estados.getAlteracao().getEstado();
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        try {
            Endereco enderecoDeletar = getEndereco();
            //tratar (se o ENDEREÇO veio com todos os campos corretos ou se ela veio por completo.
                if (enderecoDeletar == null) {
                    JOptionPane.showMessageDialog(null, "Selecione um Endereço para excluir");
                    return;
                }
                //criando uma optionPane para confirmar a exclusão
                if (JOptionPane.showConfirmDialog(null, "Deseja Realment exlcuir o Endereço?", "ATENÇÃO", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    enderecoDao.excluirEndereco(enderecoDeletar);
                    JOptionPane.showMessageDialog(null, "Endereço excluído com sucesso!!!");
                    limparCampos();
                    habilitarCampos(false);
                    //desabilitar botões
                    estadoInicialDosBotoes();
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro ao excluir Endereço");
            } finally {
                limparCampos();
                preencherTabelaEndereco();
                enderecoDao.fecharCursores();
            }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGravarActionPerformed
        try {
            Endereco enderecoGravar = getEndereco();
            //testa se a MARCA veio completa, com todos os itens a serem salvos
            if(enderecoGravar == null){
                return;
            }
            //testa se está ocorrendo uma gravação
            if(this.estado == Estados.getInsercao().getEstado()){
                enderecoDao.inserirEndereco(enderecoGravar);
                jtfCodigo.setText(enderecoGravar.getCodigoEndereco().toString());
                JOptionPane.showMessageDialog(null, "Registro cadastrado com sucesso!");
            }
            //testa se está ocorrendo um update ou uma alteração
            if(this.estado == Estados.getAlteracao().getEstado()){
                enderecoDao.alterarEndereco(enderecoGravar);
                JOptionPane.showMessageDialog(null, "Registro de Endereço alterado com sucesso!");
            }

            //deixar os botões em estado PADRAO
            estadoPadraoDosBotoes();

            //desabilitar os campos
            habilitarCampos(false);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao salvar Endereço");
        } finally {
            enderecoDao.fecharCursores();
            preencherTabelaEndereco();
            limparCampos();
        }
    }//GEN-LAST:event_jbGravarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        //definir estado padrão inicial aos botoes
        estadoInicialDosBotoes();
        //PERGUNTAR SOBRE ENUM
        this.estado = Estados.getPadrao().getEstado();
        limparCampos();
        habilitarCampos(false);
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbBuscarCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarCidadeActionPerformed
        try {
            BuscarCidade buscarCidade = new BuscarCidade(this, true);
            buscarCidade.setVisible(true);
            
            buscarCidade.addWindowListener(new WindowListener() {
                @Override
                public void windowOpened(WindowEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void windowClosing(WindowEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void windowClosed(WindowEvent e) {
                    cidade = (Cidade) cidadeDao.getByIdCidade(Long.valueOf(buscarCidade.codigoCidade));
                    setCidade(cidade);
                }

                @Override
                public void windowIconified(WindowEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void windowDeiconified(WindowEvent e) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void windowActivated(WindowEvent e) {}

                @Override
                public void windowDeactivated(WindowEvent e) {}
            });
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jbBuscarCidadeActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        List<String> campos = new ArrayList<>();
        campos.add("CD_ENDERECO");
        campos.add("SG_UF");
        campos.add("NM_CIDADE");
        campos.add("NM_LOGRADOURO");
        campos.add("NR_CEP");
        
        switch(jcbFiltrar.getSelectedIndex()){
            case 0:{
                preencherTabelaEndereco();
            }break;
            case 1:{//código endereco
                try {
                    JTableUtils.preencherJTable(jtListaEndereco, enderecoDao.resultSetGetById(Long.valueOf(jtfValor.getText())), campos);
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Informe um valor numérico");
                    jtfValor.grabFocus();
                }
            }break;
            case 2:{//nome Cidade
                try {
                    if(!jtfValor.getText().isEmpty()){                        
                        JTableUtils.preencherJTable(jtListaEndereco, enderecoDao.resultSetGetByCidade(jtfValor.getText()), campos);
                    }else{
                        JOptionPane.showMessageDialog(null, "Alguma letra precisa ser informada");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Informe uma Cidade");
                    jtfValor.grabFocus();
                }
            }break;
            case 3:{//logradouro
                try {
                    if(!jtfValor.getText().isEmpty()){                        
                        JTableUtils.preencherJTable(jtListaEndereco, enderecoDao.resultSetGetByLogradouro(jtfValor.getText()), campos);
                    }else{
                        JOptionPane.showMessageDialog(null, "Alguma letra precisa ser informada");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Informe um Logradouro");
                    jtfValor.grabFocus();
                }
            }break;
            case 4:{//cep
                try {
                    if(!jtfValor.getText().isEmpty()){                        
                        JTableUtils.preencherJTable(jtListaEndereco, enderecoDao.resultSetGetByCep(jtfValor.getText()), campos);
                    }else{
                        JOptionPane.showMessageDialog(null, "Alguma letra precisa ser informada");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Informe um CEP");
                    jtfValor.grabFocus();
                }
            }break;
        }
        enderecoDao.fecharCursores();
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jcbFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFiltrarActionPerformed
        if(jcbFiltrar.getSelectedIndex() == 0){
            jtfValor.setEnabled(false);
            jtfValor.setText("");
        }else{
            jtfValor.setEnabled(true);
            jtfValor.setText("");
        }
    }//GEN-LAST:event_jcbFiltrarActionPerformed

    private void jtListaEnderecoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtListaEnderecoMouseClicked
        if(evt.getClickCount() > 1){
            endereco = (Endereco) enderecoDao.getById(Long.valueOf(jtListaEndereco.getValueAt(jtListaEndereco.getSelectedRow(), 0).toString()));
            setEndereco(endereco);
            jTabbedPane1.setSelectedIndex(0);
            estadoPadraoDosBotoes();
        }
    }//GEN-LAST:event_jtListaEnderecoMouseClicked

    private void jftfCepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftfCepFocusLost
        try {
            String cidade = null;
            String logradouro = null;
            String bairro = null;
            String uf = null;
            String cep = null;
            
            cep = jftfCep.getText().replace(" ", "").replace("-", "");
            
            if(!cep.isEmpty()){
                if(jftfCep.getText().equals(buscaCep.getEndereco(jftfCep.getText()))){
                    JOptionPane.showMessageDialog(null, "CEP inválido");
                    jftfCep.setText("");
                }else{
                    logradouro = buscaCep.getEndereco(jftfCep.getText());
                    bairro = buscaCep.getBairro(jftfCep.getText());
                    cidade = buscaCep.getCidade(jftfCep.getText());
                    uf = buscaCep.getUF(jftfCep.getText());
                    
                    if(logradouro.lastIndexOf("-") != -1){
                        logradouro = logradouro.substring(0, logradouro.lastIndexOf("-"));                        
                    }
                    
                    jtfLogradouro.setText(logradouro);
                    jtfBairro.setText(bairro);

                    setCidade((Cidade) cidadeDao.getByCidadeUf(cidade.toUpperCase(), uf.toUpperCase()));                    
                }
            }else{
                jftfCep.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jftfCepFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnderecoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnderecoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnderecoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnderecoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnderecoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscarCidade;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbGravar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JComboBox<String> jcbFiltrar;
    private javax.swing.JFormattedTextField jftfCep;
    private javax.swing.JLabel jlCodigo;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpConsulta;
    private javax.swing.JPanel jpEndereco;
    private javax.swing.JTable jtListaEndereco;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfCodigoCidade;
    private javax.swing.JTextField jtfComplemento;
    private javax.swing.JTextField jtfLogradouro;
    private javax.swing.JTextField jtfNomeCidade;
    private javax.swing.JTextField jtfNomeUf;
    private javax.swing.JTextField jtfNumero;
    private javax.swing.JTextField jtfValor;
    // End of variables declaration//GEN-END:variables
    
    
    public void setEndereco(Endereco endereco){
        try {
            jtfCodigo.setText(endereco.getCodigoEndereco().toString());
            if(endereco.getLogradouro() != null){
                jtfLogradouro.setText(endereco.getLogradouro());
            }
            if(endereco.getNumero() != null){
                jtfNumero.setText(endereco.getNumero());
            }
            if(endereco.getComplemento() != null){
                jtfComplemento.setText(endereco.getComplemento());
            }
            if(endereco.getBairro() != null){
                jtfBairro.setText(endereco.getBairro());                
            }
            if(endereco.getCep() != null){                
                jftfCep.setText(endereco.getCep());
            }            
            cidade = (Cidade) endereco.getCidade();
            setCidade(cidade);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void preencherTabelaEndereco(){
        List<String> campos = new ArrayList<>();
        campos.add("CD_ENDERECO");
        campos.add("SG_UF");
        campos.add("NM_CIDADE");
        campos.add("NM_LOGRADOURO");
        campos.add("NR_CEP");
        
        JTableUtils.preencherJTable(jtListaEndereco, enderecoDao.resultSetGetAll(this.codigoParaPassagem), campos);
    }
    
    public void setCidade(Cidade cidade){
        try {
            jtfCodigoCidade.setText(cidade.getCodigoCidade().toString());
            jtfNomeCidade.setText(cidade.getNomeCidade());
            jtfNomeUf.setText(cidade.getUf().getNomeUf());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public Endereco getEndereco(){
        try {
            endereco = new Endereco();
            
            if(!jtfCodigo.getText().isEmpty()){
                endereco.setCodigoEndereco(Long.valueOf(jtfCodigo.getText()));
            }
            if(jtfCodigoCidade.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Informe uma Cidade ou o CEP");
                return null;
            }            
            endereco.setCidade(cidadeDao.getByIdCidade(Long.valueOf(jtfCodigoCidade.getText())));            
            endereco.setLogradouro(jtfLogradouro.getText());
            endereco.setNumero(jtfNumero.getText());
            endereco.setComplemento(jtfComplemento.getText());
            endereco.setBairro(jtfBairro.getText());
            if(jftfCep.getText().replace(" ", "").replace("-", "").isEmpty()){
                endereco.setCep(null);
            }else{
                endereco.setCep(jftfCep.getText());
            }
            return endereco;
        } catch (Exception e){
            e.printStackTrace();
            return null;
        }
    }
    
    
    /**LIMPAR CAMPOS ENDERECO.
     * Limpa os campos da aba ENDEREÇO
     */
    public void limparCampos(){
        jtfCodigo.setText("");
        jtfLogradouro.setText("");
        jtfNumero.setText("");
        jtfComplemento.setText("");
        jtfBairro.setText("");
        jftfCep.setText("");
        
        jtfCodigoCidade.setText("");
        jtfNomeCidade.setText("");
        jtfNomeUf.setText("");
    }
    
    /**HABILITAR CAMPOS ENDERECO.
     * Limpa os campos da aba ENDEREÇO
     */
    public void habilitarCampos(Boolean estado){
        jtfLogradouro.setEnabled(estado);
        jtfNumero.setEnabled(estado);
        jtfComplemento.setEnabled(estado);
        jtfBairro.setEnabled(estado);
        jftfCep.setEnabled(estado);
        jbBuscarCidade.setEnabled(estado);
    }
    
    /**Método para habilitar/desabilitar os BOTÓES, ao iniciar a tela.
     * Ao iniciar, manter os botões principais em estado de habilitado
     */
    public void estadoPadraoDosBotoes(){
        jbNovo.setEnabled(true);
        jbAlterar.setEnabled(true);
        jbExcluir.setEnabled(true);
        
        jbGravar.setEnabled(false);
        jbCancelar.setEnabled(false);
    }
    
    /**Métod para habilitar/desabilitar os BOTÕES, quando se está em modo de edição.
     * 
     */
    public void estadoDosBotoesAoInserirNovo(){
        jbNovo.setEnabled(false);
        jbAlterar.setEnabled(false);
        jbExcluir.setEnabled(false);
        
        jbGravar.setEnabled(true);
        jbCancelar.setEnabled(true);
    }
    
    /**Método inicial dos botões
     * 
     */
    public void estadoInicialDosBotoes(){
        jbNovo.setEnabled(true);
        jbAlterar.setEnabled(false);
        jbExcluir.setEnabled(false);
        
        jbGravar.setEnabled(false);
        jbCancelar.setEnabled(false);
    }

}
